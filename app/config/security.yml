security:

    # http://symfony.com/it/doc/current/book/security.html
    # I fornitori di utenti caricano le informazioni dell'utente e le inseriscono in un oggetto User.
    # Se si caricano utenti dalla base dati o da altre sorgenti, si userà una propria classe personalizzata.
    # Se invece si usa il fornitore "in memoria", esso restituirà un oggetto Symfony\Component\Security\Core\User\User.
    encoders:
        Rufy\RestApiBundle\Entity\User:
        #Symfony\Component\Security\Core\User\User:
            algorithm: sha512

    #Gli utenti con il ruolo ROLE_ADMIN avranno anche il ruolo ROLE_OWNER, ROLE_USER e ROLE_READER.
    role_hierarchy:
        ROLE_USER:          ROLE_READER
        ROLE_OWNER:         [ROLE_USER]
        ROLE_ADMIN:         [ROLE_OWNER]

    #http://symfony.com/it/doc/current/cookbook/security/entity_provider.html
    providers:
        users:
            entity: { class: RufyRestApiBundle:User }

#        in_memory:
#            memory:
#                users:
#                    mat:
#                        password: $2a$12$HSBmWvUZDiZM/IQFtP12L.drU7vKWz9PCNrNxH3BQodbVEHmbnxbO
#                        roles: 'ROLE_READER'
#                        #010487
#                    matiux:
#                        password: $2a$12$FrQbVGNmmmB.Db2VjdVcqO6SxVbzTb6F1l0lvrCHW3nv4RSj5qRTa
#                        roles: 'ROLE_USER'

    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false

        home:
            pattern: ^\/api(\/)?$
            anonymous: ~
            security: false

        default:
            http_basic: ~
            stateless: true

    access_control:
        - { path: ^/api\/(.)*, roles: ROLE_ADMIN  }
